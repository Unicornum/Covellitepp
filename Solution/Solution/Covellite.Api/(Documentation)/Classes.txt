
@startuml

IWindow : {abstract} + Rect GetClientRect()
IWindow : {abstract} + RendererInterface * GetRendererInterface()
IWindow : ---

IWindow <|-.- Window

Rocket_Core_RendererInterface : {abstract} + void Functions()
Rocket_Core_RendererInterface : ---

renderer_IRenderer : {abstract} + void ClearWindow()
renderer_IRenderer : {abstract} + void Present()
renderer_IRenderer : {abstract} + void ResizeWindow(int, int)

renderer_IRenderer <|-.- renderer_Renderer

renderer_Renderer : + IRenderer:: ...
renderer_Renderer : ---
renderer_Renderer : + RendererInterface:: ...
renderer_Renderer : ---
renderer_Renderer : Renderer(String _ApiName, Data)

Rocket_Core_RendererInterface <|-.- renderer_Renderer

Window : + IWindow:: ...
Window : ---
Window : Window(os_Window &)

Window --* renderer_Renderer

renderer_IRenderer <|-.- renderer_IGraphicApi

renderer_IGraphicApi : {abstract} + String GetUsingApi()
renderer_IGraphicApi : ---
renderer_IGraphicApi : {abstract} + ITexture * Create(const ITexture::Data &)
renderer_IGraphicApi : {abstract} + void Destroy(ITexture *)
renderer_IGraphicApi : {abstract} + IGeometry * Create(const IGeometry::Data &)
renderer_IGraphicApi : {abstract} + void Destroy(IGeometry *)
renderer_IGraphicApi : {abstract} + void EnableScissorRegion(int, int, int, int)
renderer_IGraphicApi : {abstract} + void DisableScissorRegion()
renderer_IGraphicApi : {abstract} + void Render()

ITexture : {abstract} + void Render()
ITexture : ---

ITexture *-- renderer_IGraphicApi

IGeometry : {abstract} + void Update(float, float)
IGeometry : {abstract} + void Render()
IGeometry : ---

IGeometry *-- renderer_IGraphicApi

renderer_Renderer --* renderer_IGraphicApi

renderer_IGraphicApi <|-.- renderer_OpenGLES
renderer_IGraphicApi <|-.- renderer_OpenGL
renderer_IGraphicApi <|-.- renderer_DirectX9
renderer_IGraphicApi <|-.- renderer_DirectX10
renderer_IGraphicApi <|-.- renderer_DirectX11

@enduml
